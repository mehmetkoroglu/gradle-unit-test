/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hw3;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import spark.ModelAndView;
import static spark.Spark.get;
import static spark.Spark.post;
import static spark.Spark.port;
import spark.template.mustache.MustacheTemplateEngine;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        Logger logger = LogManager.getLogger(App.class);
        logger.error("Error!");

        String systemPort = System.getenv("PORT");
        int port = Integer.parseInt(systemPort != null ? systemPort : "4567");
        port(port);
        logger.error("Current port number: " + port);

        get("/", (req, res) -> "Hello World");

        get("/compute", (req, res) -> {
            Map<String, String> map = new HashMap<String, String>();
            map.put("result", "not computed yet!");
            return new ModelAndView(map, "compute.mustache");
        }, new MustacheTemplateEngine());

        post("/compute", (req, res) -> {
            String input1 = req.queryParams("input1");

            Scanner scanner = new Scanner(input1);
            scanner.useDelimiter("[;\r\n]+");
            ArrayList<Integer> arrayList = new ArrayList<>();
            while (scanner.hasNext()) {
                int value = Integer.parseInt(scanner.next().replaceAll("\\s", ""));
                arrayList.add(value);
            }
            scanner.close();

            String input2 = req.queryParams("input2").replaceAll("\\s", "");
            int value2 = Integer.parseInt(input2);

            String input3 = req.queryParams("input3").replaceAll("\\s", "");
            int value3 = Integer.parseInt(input3);

            String input4 = req.queryParams("input4");

            boolean result = App.calc(arrayList, value2, value3, input4);

            Map<String, Boolean> map = new HashMap<String, Boolean>();
            map.put("result", result);

            return new ModelAndView(map, "compute.mustache");
        }, new MustacheTemplateEngine());
    }

    public static boolean calc(ArrayList<Integer> arrayList, int count1, int count2, String calcType) {
        if (arrayList.isEmpty())
            return true;

        if (calcType.equals("+")) {
            return arrayList.contains(count1 + count2);
        }
        if (calcType.equals("-")) {
            return arrayList.contains(count1 - count2);
        }
        if (calcType.equals("*")) {
            return arrayList.contains(count1 * count2);
        }
        if (calcType.equals("/")) {
            return arrayList.contains(count1 / count2);
        }

        return false;
    }
}
